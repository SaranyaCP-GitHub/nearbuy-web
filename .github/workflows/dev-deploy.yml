name: Development Deployment

on:
  push:
    branches: [dev]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test || echo "Tests failed but continuing..."

  deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Copy code to VM
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DEV_HOST }}
        username: ${{ secrets.DEV_USERNAME }}
        key: ${{ secrets.DEV_SSH_KEY }}
        port: ${{ secrets.DEV_SSH_PORT }}
        source: "."
        target: "/home/${{ secrets.DEV_USERNAME }}/nearbuy-web"
        
    - name: Deploy to VM
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DEV_HOST }}
        username: ${{ secrets.DEV_USERNAME }}
        key: ${{ secrets.DEV_SSH_KEY }}
        port: ${{ secrets.DEV_SSH_PORT }}
        script: |
          cd /home/${{ secrets.DEV_USERNAME }}/nearbuy-web
          
          # Stop and remove existing container
          docker stop nearbuy-dev || true
          docker rm nearbuy-dev || true
          
          # Build new image
          docker build -f Dockerfile.dev -t nearbuy-web-dev:latest .
          
          # Run new container
          docker run -d \
            --name nearbuy-dev \
            --restart unless-stopped \
            -p 3000:3000 \
            nearbuy-web-dev:latest
          
    - name: Health check
      run: |
        sleep 30
        curl -f http://${{ secrets.DEV_HOST }}:3000 || exit 1 